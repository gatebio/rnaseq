script:
"""
nextflow.enable.dsl=2
include { TRUST4 } from '../main.nf'

workflow {
    def sample_id = 'testsample'
    def mode = 'fastq'
    def bam = file('dummy.bam') // Not used in fastq mode, but required as input
    def fq1 = 'https://raw.githubusercontent.com/liulab-dfci/TRUST4/6c1c02c97b365a4ebfa4e986c75e6898779a8def/example/example_1.fq'
    def fq2 = 'https://raw.githubusercontent.com/liulab-dfci/TRUST4/6c1c02c97b365a4ebfa4e986c75e6898779a8def/example/example_2.fq'
    def fasta_vdj = 'https://raw.githubusercontent.com/liulab-dfci/TRUST4/6c1c02c97b365a4ebfa4e986c75e6898779a8def/human_IMGT%2BC.fa'
    def ref = 'https://raw.githubusercontent.com/liulab-dfci/TRUST4/6c1c02c97b365a4ebfa4e986c75e6898779a8def/hg38_bcrtcr.fa'

    // Ensure dummy.bam exists (empty file for test)
    if( !bam.exists() ) {
        bam.text = ''
    }

    sample_ch = Channel.of(sample_id)
    mode_ch = Channel.of(mode)
    bam_ch = Channel.of(bam)
    fq1_ch = Channel.of(fq1)
    fq2_ch = Channel.of(fq2)
    fasta_vdj_ch = Channel.of(fasta_vdj)
    ref_ch = Channel.of(ref)

    TRUST4(sample_ch, mode_ch, bam_ch, fq1_ch, fq2_ch, fasta_vdj_ch, ref_ch)
}
""" 